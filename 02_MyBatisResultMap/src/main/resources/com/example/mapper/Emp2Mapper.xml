<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.Emp2Mapper">


    <resultMap id="EmpResultMapJiLian" type="Emp2">
        <id property="empId" column="emp_id"/>
        <result property="empUsername" column="emp_username"/>
        <result property="empPassword" column="emp_password"/>
        <result property="age" column="age"/>
        <result property="gender" column="gender"/>
        <!-- 使用级联方式映射属性和字段 -->
        <result property="dept.deptId" column="dept_id"/>
        <result property="dept.deptName" column="dept_name"/>
    </resultMap>
    <!-- Emp2 queryEmpByEmpIdUseJiLian(@Param("empId") Integer empId); -->
    <select id="queryEmpByEmpIdUseJiLian" resultMap="EmpResultMapJiLian">
        <!--
            使用resultMap级联方式映射属性和字段
            得到结果: emp=Emp2{
                        empId=1, empUsername='zhangsan', empPassword='123456', age=20, gender='男',
                        dept=Dept{deptId=1, deptName='开发'}
                        }
        -->
        select t_emp.*, t_dept.*
        from t_emp
        left JOIN t_dept
        ON t_emp.dept_id = t_dept.dept_id
        where t_emp.emp_id = #{empId}
    </select>


    <resultMap id="EmpResultMap" type="Emp2">
        <id property="empId" column="emp_id"/>
        <result property="empUsername" column="emp_username"/>
        <result property="empPassword" column="emp_password"/>
        <result property="age" column="age"/>
        <result property="gender" column="gender"/>
        <!--
            <association>: 处理多对一的映射关系(处理实体类型的属性)
            property: 设置需要处理映射关系的属性的属性名
            javaType: 设置需要处理的属性的类型
        -->
        <association property="dept" javaType="Dept">
            <id property="deptId" column="dept_id"/>
            <result property="deptName" column="dept_name"/>
        </association>
    </resultMap>

    <!-- Emp2 queryEmpByEmpIdAssociation(@Param("empId") Integer empId); -->
    <select id="queryEmpByEmpIdAssociation" resultMap="EmpResultMap">
        <!--
            使用 association 方式映射实体类型属性
            得到结果: emp=Emp2{
                        empId=1, empUsername='zhangsan', empPassword='123456', age=20, gender='男',
                        dept=Dept{deptId=1, deptName='开发'}
                        }
        -->
        SELECT t_emp.*, t_dept.*
        FROM t_emp
        LEFT JOIN t_dept
        ON t_emp.dept_id = t_dept.dept_id
        WHERE t_emp.emp_id = #{empId}
    </select>

    <resultMap id="EmpResultMapStep" type="Emp2">
        <id property="empId" column="emp_id"/>
        <result property="empUsername" column="emp_username"/>
        <result property="empPassword" column="emp_password"/>
        <result property="age" column="age"/>
        <result property="gender" column="gender"/>
        <!--
            property: 设置需要处理映射关系的属性的属性名
            select: 设置分布查询 sql 的唯一标识 ( namespace + id )
            column: 将查询出的某个字段作为分步查询的 sql 的条件
            fetchType: 在开启了延迟加载的环境中，通过该属性设置当前的分布查询是否使用延迟加载
            fetchType="eager(立即加载)|lazy(延迟加载)"
        -->
        <association property="dept"
                     fetchType="eager"
                     select="com.example.mapper.DeptMapper.queryDeptByDeptId"
                     column="dept_id"/>
    </resultMap>
    <!-- Emp2 queryEmpByEmpIdUseStep(@Param("empId") Integer empId); -->
    <select id="queryEmpByEmpIdUseStep" resultMap="EmpResultMapStep">
        select * from t_emp where emp_id = #{empId}
    </select>

</mapper>